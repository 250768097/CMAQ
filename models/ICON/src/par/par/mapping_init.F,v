head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_7_1:1.1.1.1 AMAD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2009.12.10.15.46.22;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2009.12.10.15.46.22;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************
C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/ICON/src/par/par/mapping_init.F,v 1.6 2006/06/10 10:57:31 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C %W% %P% %G% %U%

        SUBROUTINE MAPPING_INIT ( XCELL_C, YCELL_C, XCELL_F, YCELL_F,
     &                            COL, ROW, COL_RATIO, ROW_RATIO,
     &                            COL_DISP, ROW_DISP, COL_LOC, ROW_LOC )

C-----------------------------------------------------------------------
C Purpose:
 
C   To initialize the starting column and row location of the new shifted 
C decomposition in each processor
 
C Revision history:
 
C   Orginal version: 02/15/00 by David Wong, LM
 
C   7/20/00 David Wong, LM
C           -- convert XCELL_C, YCELL_C, XCELL_F, and YCELL_F into integer
C              before computing the ratio. This will avoid machine precision
C              problem to compute the ratio first and let the machine to
C              convert the answer into integer.
C   2/20/02 David Wong, LM
C           -- modified the ROW_DISP and COL_DISP calculations for the cases 
C              when the corresponding *_RATIO is 1 which means resolutions are 
C              the same in the fine and coarse grid.
C           -- modified the arithmetic when accessing the 2nd index of COLSX_PE 
C              and ROWSX_PE since they are starting from 1 rather than from 0.
C   27 May 06 J.Young: ck appropriate grid resolutions; changed row/col to
C                      col/row
                          
C Argument list:
 
C In:
C        XCELL_C -- resolution of the x-direction in the coarse domain
C        YCELL_C -- resolution of the y-direction in the coarse domain
C        XCELL_F -- resolution of the x-direction in the fine domain
C        YCELL_F -- resolution of the y-direction in the fine domain
C        COL     -- number of steps that the fine domain (1,1) cell needs to 
C                   leave the current coarse domain grid cell in the column
C                   direction
C        ROW     -- number of steps that the fine domain (1,1) cell needs to 
C                   leave the current coarse domain grid cell in the row 
C                   direction
 
C Out:
C        COL_RATIO -- the ratio between number of column in the fine domain and
C                     coarse domain
C        ROW_RATIO -- the ratio between number of rows in the fine domain and
C                     coarse domain
C        COL_DISP  -- the column-wise distance between the starting point of 
C                     the fine domain in a processor and the coarse grid 
C                     boundary (not the physical application boundary)
C        ROW_DISP  -- the row-wise distance between the starting point of the 
C                     fine domain in a processor and the coarse grid boundary
C                     (not the physical application boundary)
 
C InOut:
C        COL_LOC   -- In:  the column location of the (1,1) cell of fine
C                          domain in the coarse domain
C                     Out: the column location of the starting cell of 
C                          fine domain in the coarse domain in a processor
C        ROW_LOC   -- In:  the row location of the (1,1) cell of fine 
C                          domain in the coarse domain
C                     Out: the row location of the starting cell of fine 
C                          domain in the coarse domain in a processor
                          
C-----------------------------------------------------------------------

        USE HGRD_DEFN

        IMPLICIT NONE

        INCLUDE SUBST_MPICH        ! MPI definitions and parameters.
!       INCLUDE SUBST_HGRD_ID      ! Horizontal grid

        REAL( 8 ) :: XCELL_C, YCELL_C, XCELL_F, YCELL_F
        INTEGER COL, ROW
        INTEGER COL_RATIO, ROW_RATIO, COL_DISP, ROW_DISP
        INTEGER COL_LOC, ROW_LOC

        INTEGER MY_PE           ! my PE number
        INTEGER TEMP_MY_PE      ! temporary PE number in modules arithmic or
                                ! integer division
        INTEGER ERROR           ! error returning code
        INTEGER SUM             ! summation variable

        CHARACTER( 16 ) :: PNAME = 'MAPPING_INIT'
        CHARACTER( 80 ) :: MSG = ' '

C-----------------------------------------------------------------------

        CALL MPI_COMM_RANK ( MPI_COMM_WORLD, MY_PE, ERROR )

        COL_RATIO = INT( YCELL_F ) / INT( YCELL_C )
        ROW_RATIO = INT( XCELL_F ) / INT( XCELL_C )

        IF ( COL_RATIO .LE. 0 .OR. ROW_RATIO .LE. 0 ) THEN
           WRITE( *,* ) ' *** COL_RATIO: ', COL_RATIO,
     &                  ' *** ROW_RATIO: ', ROW_RATIO
           MSG = 'Error in grid cell resolution'
           CALL M3EXIT( PNAME, 0, 0, MSG, 1 )
        END IF

        TEMP_MY_PE = MOD( MY_PE, NPCOL )
        IF ( TEMP_MY_PE .EQ. 0 ) THEN
           SUM = 0
        ELSE
!          SUM = COLSX_PE( 2,TEMP_MY_PE-1 )
           SUM = COLSX_PE( 2,TEMP_MY_PE )
        END IF

        IF ( COL_RATIO .EQ. 1 ) THEN
           COL_DISP = 0
        ELSE 
           COL_DISP = COL_RATIO - COL + 1
        END IF

        IF ( SUM .EQ. 0 ) THEN
           COL_LOC = COL_LOC
        ELSE
           COL_LOC = COL_LOC + ( ( SUM + COL_DISP ) / COL_RATIO )
           COL_DISP = MOD( ( COL_DISP + SUM ), COL_RATIO )
        END IF

        TEMP_MY_PE = MY_PE / NPCOL
        IF ( TEMP_MY_PE .EQ. 0 ) THEN
           SUM = 0
        ELSE
!          SUM = ROWSX_PE( 2,( TEMP_MY_PE-1 )*NPCOL )
           SUM = ROWSX_PE( 2,( TEMP_MY_PE )*NPCOL )
        END IF

        IF ( ROW_RATIO .EQ. 1 ) THEN
           ROW_DISP = 0
        ELSE 
           ROW_DISP = ROW_RATIO - ROW + 1
        END IF

        IF ( SUM .EQ. 0 ) THEN
           ROW_LOC = ROW_LOC
        ELSE
           ROW_LOC = ROW_LOC + ( ( SUM + ROW_DISP ) / ROW_RATIO )
           ROW_DISP = MOD( ( ROW_DISP + SUM ), ROW_RATIO )
        END IF

        RETURN
        END SUBROUTINE MAPPING_INIT
@


1.1.1.1
log
@CMAQv4_7_1 release
@
text
@@
