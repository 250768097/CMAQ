head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_7_1:1.1.1.1 AMAD:1.1.1;
locks    ; strict;
comment  @c @;


1.1
date     2009.12.10.15.46.21;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2009.12.10.15.46.21;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
C***********************************************************************
C   Portions of Models-3/CMAQ software were developed or based on      *
C   information from various groups: Federal Government employees,     *
C   contractors working on a United States Government contract, and    *
C   non-Federal sources (including research institutions).  These      *
C   research institutions have given the Government permission to      *
C   use, prepare derivative works, and distribute copies of their      *
C   work in Models-3/CMAQ to the public and to permit others to do     *
C   so.  EPA therefore grants similar permissions for use of the       *
C   Models-3/CMAQ software, but users are requested to provide copies  *
C   of derivative works to the Government without restrictions as to   *
C   use by others.  Users are responsible for acquiring their own      *
C   copies of commercial software associated with Models-3/CMAQ and    *
C   for complying with vendor requirements.  Software copyrights by    *
C   the MCNC Environmental Modeling Center are used with their         *
C   permissions subject to the above restrictions.                     *
C***********************************************************************

C RCS file, release, date & time of last delta, author, state, [and locker]
C $Header: /project/work/rep/ICON/src/driver/icon/icon.F,v 1.8 2006/06/09 17:49:47 yoj Exp $ 

C what(1) key, module and SID; SCCS file; date and time of last delta:
C %W% %P% %G% %U%

      PROGRAM ICON   

C*************************************************************************
 
C FUNCTION: To produce a Models-3 CTM Initial Concentration file.
C           Valid input options include: 
C           1) a Models-3 CTM output file,
C           2) a user specified ASCII file of vertical profiles,
C           3) a RADM model output conc file,
C           4) subroutines that produce catalogued tracer species concs.
              
C PRECONDITIONS: None
  
C KEY SUBROUTINES/FUNCTIONS CALLED: INIC
 
C REVISION HISTORY:
C    Created by Jerry Gipson, January, 1998; based on the original Models-3
C                                            prototype.
C    Modified 4/22/99 by JG to provide default treatment for missing SDATE
C                      and STIME
C    12/13/99 David Wong, LM -- parallelelized the code
C    01/24/02 Steve Howard (Jeff Young) - dynamic allocation
C    12/13/04 J.Young: vert dyn alloc - Use VGRD_DEFN
C    24 May 06 J.Young: par_init/pio_init col/row order check
                   
C*************************************************************************

      USE HGRD_DEFN   ! Module to store and load the horizontal grid variables
      USE VGRD_DEFN             ! vertical layer specifications

      IMPLICIT NONE       

C Include Files:
      INCLUDE SUBST_IOPARMS     ! IOAPI parameters
      INCLUDE SUBST_IOFDESC     ! IOAPI file description
      INCLUDE SUBST_IODECL      ! IOAPI declarations
!     INCLUDE SUBST_HGRD_ID     ! Horizontal grid
!     INCLUDE SUBST_VGRD_ID     ! Vertical grid
!     INCLUDE SUBST_COORD_ID    ! Grid coordinate data
      INCLUDE SUBST_GC_SPC      ! gas chem ic/bc surrogate names and map table
      INCLUDE SUBST_AE_SPC      ! aerosol ic/bc surrogate names and map table
      INCLUDE SUBST_NR_SPC      ! non-react ic/bc surrogate names and map table
      INCLUDE SUBST_TR_SPC      ! tracer ic/bc surrogate names and map table

      INCLUDE 'IC_PARMS.EXT'    ! ICON paramters

C Arguments: None

C Parameters:
      INTEGER      NSPCS        ! Total number of species
      PARAMETER  ( NSPCS = N_GC_SPC
     &                   + N_AE_SPC
     &                   + N_NR_SPC
     &                   + N_TR_SPC )

      INTEGER      NSPCSD       ! Dimension for total number of species
      PARAMETER  ( NSPCSD = N_GC_SPCD
     &                    + N_AE_SPCD
     &                    + N_NR_SPCD
     &                    + N_TR_SPCD )

C External Functions:
      INTEGER ENVINT      ! Get integer value of an environment variable  

C Local Variables:
      CHARACTER(  2 ) :: COLROW = 'CR'          ! col/row arg list order
      CHARACTER( 16 ) :: EXT_IC_NAME( NSPCSD )  ! Names of species in *.EXTs
      CHARACTER( 16 ) :: PNAME = 'ICON'         ! Program name
      CHARACTER( 80 ) :: MSG                    ! Log message 

      INTEGER    LOGUNIT  ! Unit number for output log
      INTEGER    ISP      ! Species counter
      INTEGER    N        ! Loop index
      INTEGER    SDATE    ! Start date 
      INTEGER    STATUS   ! Status code
      INTEGER    STIME    ! Start time 

      INTEGER    PAR_ERR     ! Error code from parallel initialization.
      REAL       CLOCK       ! Wall-clock time (sec) at initialization.

C**********************************************************************

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Initialize IO/API
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      CALL PAR_INIT( COLROW, NSPCSD, CLOCK, PAR_ERR )

      IF ( PAR_ERR .NE. 0 ) THEN
         MSG = 'Error in initialization program PAR_INIT.'
         CALL M3EXIT( PNAME, SDATE, STIME, MSG, STATUS )
         END IF

      LOGUNIT = INIT3( )

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  get environment variables
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      IF ( NSPCS .LE. 0 ) THEN
         MSG = 'Number of species in *.EXT files must be greater than zero'
         CALL M3ERR ( PNAME, 0, 0, 'Error reading SDATE', .TRUE. )
      END IF

      SDATE = ENVINT( 'SDATE', 'START DATE', 0, STATUS )
      IF ( STATUS .NE. 0 ) THEN
         SDATE = 0
      END IF

      STIME = ENVINT( 'STIME', 'START TIME', 0, STATUS )
      IF ( STATUS .NE. 0 ) THEN
         STIME = 0
      END IF

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Build one array containing the names of the species in *.EXT files 
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      ISP = 0
      DO N = 1, N_GC_SPC
         ISP = ISP + 1
         EXT_IC_NAME( ISP ) = GC_SPC( N )
      ENDDO

      DO N = 1, N_AE_SPC
         ISP = ISP + 1
         EXT_IC_NAME( ISP ) = AE_SPC( N )
      ENDDO

      DO N = 1, N_NR_SPC
         ISP = ISP + 1
         EXT_IC_NAME( ISP ) = NR_SPC( N )
      ENDDO

      DO N = 1, N_TR_SPC
         ISP = ISP + 1
         EXT_IC_NAME( ISP ) = TR_SPC( N )
      ENDDO

ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c  Call the routine that generates the IC output file and quit
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      CALL INIC( LOGUNIT, SDATE, STIME, EXT_IC_NAME )

      CALL PAR_TERM ( PNAME, SDATE, STIME, CLOCK )

      IF ( SHUT3() ) THEN
         WRITE ( LOGUNIT,92999 )
     &  '>>---->  Program  ICON completed successfully  <----<< '
      ELSE
         WRITE ( LOGUNIT,91000 )
     &      'FATAL ERROR shutting down Models-3 I/O'
      END IF

      STOP

C************************* FORMAT STATEMENTS ***************************

92999 FORMAT ( //5X, A, // )

91000 FORMAT ( //5X , '*** ERROR ABORT in program ICON ***',
     &            /5X , A , // )        !  generic error message format

      END
@


1.1.1.1
log
@CMAQv4_7_1 release
@
text
@@
