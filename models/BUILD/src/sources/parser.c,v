head     1.1;
branch   1.1.1;
access   ;
symbols  CMAQv4_7_1:1.1.1.1 AMAD:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2009.12.10.15.45.16;  author sjr;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2009.12.10.15.45.16;  author sjr;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/* RCS file, release, date & time of last delta, author, state, [and locker] */
/* $Header: /project/work/rep/BUILD/src/sources/parser.c,v 1.2 2006/09/07 18:24:21 showard Exp $  */

/* what(1) key, module and SID; SCCS file; date and time of last delta: */
/* %W% %P% %G% %U% */

/****************************************************************************
 *
 * Project Title: Environmental Decision Support System
 * File: @@(#)build_main.c	11.1
 *
 * COPYRIGHT (C) 1995, MCNC--North Carolina Supercomputing Center
 * All Rights Reserved
 *
 * See file COPYRIGHT for conditions of use.
 *
 * Environmental Programs Group
 * MCNC--North Carolina Supercomputing Center
 * P.O. Box 12889
 * Research Triangle Park, NC  27709-2889
 *
 * env_progs@@mcnc.org
 *
 * Last updated: 29 Jan 2001          
 *
 ****************************************************************************/


#include <stdio.h>
#include <string.h>
#include <stdlib.h>


/*  search for str1 in str2 and return position */
int getNumberOfFields( char* record, char* delimiter)
{
  int nflds;
  int i;
  int lrec;
  int ldel;
 
  lrec = strlen(record);
  ldel = strlen(delimiter);

  if( lrec==0 || ldel==0 ) return 0;
  nflds = 1;
 
  for (i=0; i<lrec ; i++)
      if (strncmp(delimiter,&record[i],ldel)==0 ) nflds++;
  return nflds;
}

/* gets to nth field in record */
int getParsedField( char* record, char* delimiter, int nth, char* field )
{
  int i;
  int lrec;
  int ldel;
  int pos1;
  int pos2; 
  int nflds;

  lrec = strlen(record);
  ldel = strlen(delimiter);

  nflds = 1;
  pos1 = 0;
  pos2 = 0;
  for (i=0; i<lrec ; i++)
  {
    if (strncmp(delimiter,&record[i],ldel)==0 )
    {
       nflds++;
       if( nflds>nth ) break;
       pos1 = pos2 + ldel;
    }
    pos2 = i+1;
  }

  strncpy( field, &record[pos1], pos2-pos1 );
  field[pos2-pos1] = '\0';
  return strlen(field);

} 

/*  converts string to upper case */
char* upper( char* record)
{
  int i;
  int lrec;
 
  lrec = strlen(record);
 
  for (i=0; i<lrec ; i++)
      if (record[i]>='a' && record[i]<='z') record[i]-=32; 
  return record;
}

/*  trim spaces from end of character string */
char* trim( char* record)
{
  int i;
  int lrec;
 
  lrec = strlen(record)-1;
 
  for (i=lrec; i>=0; i--)
      if (record[i]<=32) record[i]='\0';
  return record;
}

@


1.1.1.1
log
@CMAQv4_7_1 release
@
text
@@
